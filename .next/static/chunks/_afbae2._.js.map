{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/DELL/hackathonproject/job/app/profile/page.js"],"sourcesContent":["\"use client\";\nimport { useState, useEffect } from \"react\";\nimport { getAuth, updateProfile } from \"firebase/auth\";\nimport styles from \"./Profile.module.css\";\nimport EditProfile from \"./EditProfile\";\nimport PropTypes from \"prop-types\";\n\nimport { db } from \"../firebase\"; // Import Firestore\nimport { doc, getDoc, setDoc } from \"firebase/firestore\";\n\nconst Profile = ({ setShowProfile, onEdit }) => {\n  const [user, setUser] = useState(null);\n  const [isEditing, setIsEditing] = useState(false);\n  const [resumeData, setResumeData] = useState({\n    name: \"\",\n    email: \"\",\n    experience: [],\n    education: [],\n  });\n\n  useEffect(() => {\n    const auth = getAuth();\n    const currentUser = auth.currentUser;\n    const fetchResume = async () => {\n      if (!userId) return;\n\n      const docRef = doc(db, \"resumes\", userId);\n      const docSnap = await getDoc(docRef);\n\n      if (docSnap.exists()) {\n        setResumeData(docSnap.data());\n      }\n    };\n\n    fetchResume();\n    [user] = currentUser;\n    setUser(auth.currentUser);\n}, [user]); // Re-run when `user` changes\n  \n\n  const onClick = () => {\n    setShowProfile((prev) => !prev);\n  };\n\n  const handleUpdateProfile = () => {\n    if (user) {\n      updateProfile(user, {\n        displayName: \"New Display Name\",\n        \n        // Optionally, update the photo URL\n        // photoURL: \"https://example.com/new-profile-photo.jpg\"\n      })\n        .then(() => {\n          console.log(\"Profile updated successfully\");\n          const auth = getAuth();\n          setUser(auth.currentUser );\n          return user.reload();\n        })\n        .then(() => {\n          const auth = getAuth();\n          setUser(auth.currentUser); // Update state with new data\n        })\n        .catch((error) => {\n          console.error(\"Error updating profile:\", error);\n        });\n    } else {\n      console.log(\"No user is signed in.\");\n    }\n  };\n\n  const handleChange = (e) => {\n    setResumeData({ ...resumeData, [e.target.name]: e.target.value });\n  };\n\n  const handleEdit = () => {\n    setIsEditing(true);\n  };\n\n  const handleSave = async () => {\n    setIsEditing(false);\n    // Optionally, refresh user data\n    if (!userId) return;\n\n    try {\n      await setDoc(doc(db, \"resumes\", userId), resumeData);\n      alert(\"Resume updated successfully!\");\n    } catch (error) {\n      console.error(\"Error updating resume:\", error);\n    }\n  };\n\n  const handleCancel = () => {\n    setIsEditing(false);\n  };\n\n  return (\n    <div className={styles.profileOverlay} onClick={onClick}>\n      <div className={styles.profileContainer} onClick={(e) => e.stopPropagation()}>\n        <button className={styles.closeButton} onClick={onClick}>\n          âœ–\n        </button>\n        <div className=\"p-6 max-w-lg mx-auto bg-white shadow-md rounded\">\n      <h2 className=\"text-xl font-semibold mb-4\">Resume Profile</h2>\n\n      <input\n        type=\"text\"\n        name=\"name\"\n        value={resumeData.name}\n        onChange={handleChange}\n        placeholder=\"Full Name\"\n        className=\"w-full p-2 border rounded mb-2\"\n      />\n\n      <input\n        type=\"email\"\n        name=\"email\"\n        value={resumeData.email}\n        onChange={handleChange}\n        placeholder=\"Email\"\n        className=\"w-full p-2 border rounded mb-2\"\n      />\n\n      <button onClick={handleSave} className=\"mt-4 bg-blue-600 text-white p-2 rounded\">\n        Save Resume\n      </button>\n    </div>\n  \n\n\n        <h1 className=\"text-3xl font-bold z-index:99 text-center\">Profile</h1>\n        <div className=\"mt-4\">\n          <p className=\"text-lg\">\n            <strong>Name:</strong> {user ? user.displayName : \"Loading...\"}\n          </p>\n          <p className=\"text-lg\">\n            <strong>Email:</strong> {user ? user.email : \"Loading...\"}\n          </p>\n          <p className=\"text-lg\">\n            <strong>Phone:</strong> {user ? user.phoneNumber : \"Loading...\"}\n          </p>\n          <p className=\"text-lg\">\n            <strong>Location:</strong> {user ? user.location : \"Loading...\"}\n          </p>\n        </div>\n        <button className={styles.editButton} onClick={handleUpdateProfile}>\n          Update Profile\n        </button>\n        <button className={styles.editButton} onClick={handleEdit}>\n          Edit Profile\n        </button>\n        <div className={styles.container}>\n          {isEditing ? (\n            <EditProfile onSave={handleSave} onCancel={handleCancel} />\n          ) : (\n            <>\n              <h1>Profile</h1>\n              {/* Display user information */}\n              <button onClick={handleEdit}>Edit Profile</button>\n            </>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nProfile.propTypes = {\n  setShowProfile: PropTypes.func.isRequired,\n};\n\nexport default Profile;\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 348, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}